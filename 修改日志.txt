2017/8/25 10:12

	对数据接收线程进行了修改

	/******************第一次修改**********************/
	else if(readshusju_button_flag == true)
                {//“读取数据”按钮所产生的回复信息接收完成之后，如果没有新的指令发出，就不会有新的数据接收。利用数据接收完	成之后不会有新的数据出现这一特点，判定此次数据是否接受完成
                    readshuju_jishu++;///////////////////////////////test_15_01
                    if (readshuju_jishu >= 100000000)///////从10000000改成100000000，增加十倍。实验当中发现，按钮按下至串口	开始回复信息这段时间内，时间间隔可能会很大，因此加大计数数量。
                    {//
                        readshuju_jishu = 0;
                        readshuju_thread_flag = true;
                        readshusju_button_flag = false;
                    }
                }


	/******************第二次修改**********************/
	将if (readshuju_jishu >= 100000000)恢复成if (readshuju_jishu >= 10000000)，增加了全局变量readshuju_kaishi_flag来检	测readshuju_jishu是因为什么原因超出10000000。加readshuju_kaishi_flag之前，超出10000000有两种机会，一个是按钮按下至下位机第一个数据回复的之间的时间间隔，这个时间间隔可能会很大从而导致readshuju_jishu增加到很大，这种情况已经因readshuju_kaishi_flag的添加已经被屏蔽掉；另外一种情况就是数据接收完成之后接收线程会长时间没有数据的接收，这个情况通过判定。

2017/8/25 17:56

	根据逻辑添加了按键的失能


2017/8/26 14:57

	添加清楚flash功能

	但是"清除flash"按钮的失能使能的逻辑还需要进一步探究。详细点说就是只有在接受数据不为零的时候才可以按下“接收数据按钮”

2017/8/28 16:26

	将主面板上的“Form1”修改成“上位机”

2017/9/04 09:30
	
	修改了左下角chart的阈值显示问题

2017/9/04 11:21
	
	发现当程序呼叫出子窗口后，无法在不关闭子窗口的情况下，通过mainwindow上的关闭按钮关闭整个程序。
	现已将此bug修复。
	每个子窗口类中添加
	protected override void OnFormClosing(FormClosingEventArgs e)//关闭所有线程
        {
            this.Dispose();
            this.Close();
        }
	

2017/9/04 16:16

	由于是用户版没有更改数据的功能，所以用panel将更改基本信息的按钮隐藏了

2017/9/04 16:17

	将“解析数据”这个没用的按钮隐藏

2017/9/04 21:15

	1、使串口的下拉菜单仅显示当前可用串口
	2、将chart控件上标题、坐标轴的标签修改为汉字

2017/9/05 10:08

	将chart空间的显示封装成函数，主窗口中正常调用，子窗口通过委托调用封装函数

2017/09/05 10:10

	将应用程序的框架更改为.NET4.0版本
	
2017/9/05 10:19

	1、将每个chart空间的Titles（这玩意儿不是string类型）、ChartAreas[0].AxisX.Title、ChartAreas[0].AxisY.Title变量的设置内嵌进chart控件的显示函数中。这样只需要更改函数中的标签就可以同时影响主窗口和子窗口
	2、在某个时刻程序中添加了flag_pandushujushifouyouxiao这个标志位，用于判断本次解析是否会因为错误数据（通常这种错误数据的数值非常大或者是NaN）导致无法正常显示图像（chart控件）。
	3、主窗口的程序中最好也要添加如下的语句（任何窗口最好都要添加，感觉上保险一些）
	protected override void OnFormClosing(FormClosingEventArgs e)//关闭所有线程
        {
            this.Dispose();
            this.Close();
        }

2017/09/05 14:22

	1、在程序中修改了右上和左下chart的位置，以及双击之后所呼叫的子窗口的显示内容
	2、对面板进行了美化。将一些按键放置到groupbox中了。

2017/09/05 14:27

	按照用户版的要求，将案件和listview的位置进行了调整，使其美观一些。

2017/09/20 16:45

	对写数据部分进行了更改，原先是判断有无数值，现在是判断数据的长度是否正确

2017/09/20 21:01
	
	之前的修改导致按键处理函数return之后有些按键依然失能，对此bug进行了修复

2017/09/20 21:23

	当数据中断的时候，会显示“数据接收中断”而不是“数据接收完成”

2017/09/20 22:19

	list_view双击变单击，并可以用上下键控制。（把客户端的优点移植过来）

2017/09/21 16:32

	1、接收状态为三个“接收数据完成”、“接收数据中断”、“没有数据”
	2、“清楚flash完成”――>“清除flash完成”
	3、clearflash_button_Click函数中添加rec_Buffer_Global.Clear();用以修复部分bug
	4、shuju_jieshouwanquan_or_not函数增添了return 2;这种情况

2017/09/21 17:49

	发现bug：当chart控件中的Y数值相同的时候，chart控件的最大值与最小值会导致程序崩溃。
	eg
		rightup_chart.ChartAreas[0].AxisY.Maximum = max + (max - min) / 5;
                rightup_chart.ChartAreas[0].AxisY.Minimum = min - (max - min) / 5;
	原因是最大值和最小值相等了。
	解决办法如下
		if (max != min)
            	{
                	rightup_chart.ChartAreas[0].AxisY.Maximum = max + (max - min) / 5;
                	rightup_chart.ChartAreas[0].AxisY.Minimum = min - (max - min) / 5;
            	}
            	else
            	{	
                	rightup_chart.ChartAreas[0].AxisY.Maximum = max + 5;
                	rightup_chart.ChartAreas[0].AxisY.Minimum = min - 5;
            	}
	所有的chart控件的显示都应该按照这种方法进行修改。现已修改“磁信号”和“22Hz插值”两张图片

2017/09/21 20:19

	现已将所有的chart控件的最大值和最小值进行了修正
		if (max != min)
            	{
                	rightup_chart.ChartAreas[0].AxisY.Maximum = max + (max - min) / 5;
                	rightup_chart.ChartAreas[0].AxisY.Minimum = min - (max - min) / 5;
            	}
            	else
            	{	
                	rightup_chart.ChartAreas[0].AxisY.Maximum = max + 5;
                	rightup_chart.ChartAreas[0].AxisY.Minimum = min - 5;
            	}
	类似以上的程序段

2017/09/22 14:32

	1、在按键触发函数readshuju_button_Click中添加了以下函数
		if (chufacishu_int == 0)
                	return;
	用来测试下位机是否真的有数据
	
	2、将“图像保存”及“报表生成”中“无论‘保存对话框’选择‘是’或是‘否’都会出现保存成功的信息”这个bug进行了修复。

	3、将所有按键全部更改为使能（将choose_which_button_to_use函数中的代码全部注释）。

	4、“数据接收完成”、“数据接收中断”和“没有数据”这三个状态更改为两个，删除了“没有数据”这个状态。
		int shuju_jieshouwanquan_or_not(int rem_shuju_return_int_xingcan, int chufacishu_int_xingcan, List<byte> rec_Buffer_Global_xingcan)
        {
            if (rec_Buffer_Global_xingcan.Count < 1024)//如果连1024都不够，肯定不是一组完整的数据，数据接收中断
                return 1;            
            if (rem_shuju_return_int_xingcan != chufacishu_int_xingcan)
                return 1;
            if (rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 1] != 0xff | rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 2] != 0xff | rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 3] != 0xff | rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 4] != 0xff | 
                rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 5] != 0xff | rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 6] != 0xff | rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 7] != 0xff | rec_Buffer_Global_xingcan[rec_Buffer_Global_xingcan.Count - 8] != 0xff)
                return 1;
            return 0;
        }

2017/09/22 16:14

	对于数据接收完成的判断进行了调整，用定时器延时判断数据是否接收完成而不是用之前的变量自加。主要新添加了变量i_timer以及timer

2017/09/22 17:38

	初步检测成功

2017/09/25 20:43

	将串口号检测封装在combox_of_serial函数中

2017/09/25 20:58

	1、改进了combox_of_serial函数（添加了如下语句）
		Action<bool> actiondelegate1 = (x) => { this.serialport_comboBox.Items.Clear(); };
            	this.serialport_comboBox.Invoke(actiondelegate1, true);

	2、添加了timer1变量以及mytimer1函数，用来刷新串口号列表（serialport_comboBox控件）。

2017/09/25 21:12

	在combox_of_serial函数中添加了代码，不仅使serialport_comboBox的下拉框实时更新，而且让serialport_comboBox当前的现实也能更新。比如当前serialport_comboBox上面显示的是com8,此时将com8上的串口线拿掉，这时serialport_comboBox会将com8清除。不过也有缺陷，这种清除机制只有在电脑没有链接任何串口的情况下才会执行。就是说如果拔掉com8，但此时电脑上还连接着com7，此时
serialport_comboBox的下拉框会显示com7（更新了），但是serialport_comboBox本身显示com8（没有更新）。

2017/09/28 10:36

	将“没有数据”的判定移至按钮触发函数中。

2017/09/28 10:51

	1、初步实现清空数据
	2、将界面中的“清空数据”按钮的位置进行了调整。

2017/09/28 16:23

	中午的时候将shuju_jieshouwanquan_or_not函数中判断是否大于1024的部分删除了（感觉应该更改成小于8）

2017/09/30 10:23

	将用户版的最新的代码复制粘贴过来。

2017/09/30 10:32

	将判断接收完成的时间增加至200ms.

2017-11-08 16:47:23

	修改了两个bug
	1、excel保存文件为只读
	2、延长了数据中断或者接收的判断时间（从200毫秒增加至3000毫秒）

2017-11-10 19:57:28

	坤哥找到了四个bug
	1、清空数据时没有真正将数据（包括二维数组）
	2、保存数据是没有将当前的数据保存
	3、读取数据时清空数据
	4、百分之百数据
	已经解决了1、3、4还差2

2017-11-10 22:04:26

	保存数据修复完成

2017-11-13 10:13:14

	不知道为什么非常狗血的在shuju_listView_MouseClick函数中添加了clearserial_button_Click(this, null);
	忘记当初加这个的目的了，现在将它删除
